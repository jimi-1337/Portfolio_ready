/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/constants/constants.js":
/*!************************************!*\
  !*** ./src/constants/constants.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"projects\": function() { return /* binding */ projects; },\n/* harmony export */   \"TimeLineData\": function() { return /* binding */ TimeLineData; },\n/* harmony export */   \"mine\": function() { return /* binding */ mine; }\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar projects = [{\n  title: 'Transcendence',\n  description: \"Using NextJS, Nest.js & PostgreSQL, I built a full Stack multiplayer live game(pong) website - with live chat and user status (online/offline/ingame), options to create channels, add friends, block users, send game requests, random game pairing, 2-Step Verification, OAuth system Register/Login.\",\n  image: '/images/1.png',\n  tags: ['PostgreSQL', 'NextJS', 'NestJS', 'Docker'],\n  source: 'https://github.com/amoujane/Final_Transcendence',\n  visit: '',\n  id: 0,\n  type: \"Full Stack\"\n}, {\n  title: 'HTTP WebServer',\n  description: \"Using C++ only, we built a fully running HTTP/1.1 WebServer from scratch, Handling the main HTTP requests type (GET - POST - PUT - DELETE - TRACE - OPTIONS) and running custom CGI passed in the config file(PHP/Python...), This was a group project (two participants).\",\n  image: '/images/http.png',\n  tags: ['C++'],\n  source: 'https://github.com/amoujane/WebServ',\n  visit: '',\n  id: 1,\n  type: \"Software\"\n}, {\n  title: 'C++ Containers',\n  description: \"In this project, I re-implemented the various container types of the C++ standard template library, the re-implemented containers: Vector, List, Map, Multimap, Queue, Deque\",\n  image: '/images/containers.JPG',\n  tags: ['C++'],\n  source: 'https://github.com/amoujane/ft_containers',\n  visit: '',\n  id: 2,\n  type: \"Software\"\n}, {\n  title: 'FT Services',\n  description: \"This is a System Administration and Networking project, this project consists of setting up an infrastructure of different service using Kubernetes, setting up a multi-service cluster, Each service is running in a dedicated container, the running services are: WordPress, phpMyAdmin, nginx, FTPS, Grafana, InfluxDB, Mysql\",\n  image: '/images/ft_services.png',\n  tags: ['Kubernetes', 'Wordpress', 'PhpMyadmin', 'Nginx'],\n  source: 'https://github.com/amoujane/ft_services',\n  visit: '',\n  id: 3,\n  type: \"Stack / System Administration and Networking\"\n}, {\n  title: 'Minishell',\n  description: \"I created a shell with insperation from Zsh and Bash, with the following built-in commands: echo - cd - pwd - export - unset - env - exit, and all the other commands are running with execve.\",\n  image: '/images/bash.png',\n  tags: ['C', 'Threads', 'Fork', 'Mutex'],\n  source: 'https://github.com/amoujane/minishell',\n  visit: '',\n  id: 4,\n  type: \"Software\"\n}, {\n  title: 'Cube3D',\n  description: \"This project is inspired by the world-famous eponymous 90's game, which was the first FPS ever. We explored ray-casting. Our goal was to make a dynamic 3D view inside a maze (using C language), in which we ll have to find our way.\",\n  image: '/images/Cub3D.jpg',\n  tags: ['C', 'mlx'],\n  source: 'https://github.com/amoujane/Cub3D',\n  visit: '',\n  id: 5,\n  type: \"Software\"\n}, {\n  title: 'Dining Philosophers',\n  description: \"Solving the dining Phkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkilosophers dilemma, using threads in c\",\n  image: '/images/dining-philosophers.jpg',\n  tags: ['C', 'Threads', 'Fork', 'Mutex'],\n  source: 'https://github.com/LayeredChoas/Philosophers',\n  visit: '',\n  id: 6,\n  type: \"Software\"\n}, {\n  title: 'Docker Server',\n  description: \"System Administration Project, where I worked with docker to set up a webserver, This server is running multiple services: Wordpress, phpMyAdmin, and a SQL database with nginx\",\n  image: '/images/docker.webp',\n  tags: ['Docker', 'Nginx', 'Wordpress', 'phpMyAdmin'],\n  source: 'https://github.com/LayeredChoas/docker_server',\n  visit: '',\n  id: 7,\n  type: \"Stack / System Administration\"\n}];\nvar TimeLineData = [{\n  year: 2017,\n  text: 'Started my programming journey, with html/css'\n}, {\n  year: 2018,\n  text: 'freelancing as a web developer'\n}, {\n  year: 2019,\n  text: 'Started studying in 1337 and deep learning on C'\n}, {\n  year: 2020,\n  text: 'Dove into docker and kuberneteis world'\n}, {\n  year: 2021,\n  text: 'Building experience as Full Stack Developer'\n}];\nvar mine = {\n  me: '/images/ayoub.jpeg'\n};\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/constants/constants.js\n");

/***/ })

});